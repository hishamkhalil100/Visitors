using System;
using System.Collections.Generic;
using System.Configuration;
using System.IO;
using System.Linq;

namespace Vistors
{
    public partial class Vistors_VistorsAdd : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            // Response.Redirect(imageName.Text.ToString());
            try
            {
                if (!IsPostBack)
                {
                    getAllCountries();
                    if (Request.Cookies["UserGender"] == null && Request.Cookies["UserGender"].ToString().Equals(string.Empty))
                    {
                        Response.Redirect("~/Login.aspx?page=" + Request.RawUrl, false);
                    }
                    bool userGender = bool.Parse(Request.Cookies["UserGender"].Value.ToString());
                    if (!userGender)
                    {
                        rbFemale.Checked = true;
                    }
                    if (Session["VistorName"] != null && !string.IsNullOrEmpty(Session["VistorName"].ToString()) && !Session["VistorName"].ToString().Equals(""))
                    {
                        txtName.Text = Session["VistorName"].ToString();
                    }
                    if (Session["VistorAlternativeNID"] != null && !string.IsNullOrEmpty(Session["VistorAlternativeNID"].ToString()) && !Session["VistorAlternativeNID"].ToString().Equals(""))
                    {
                        ckAlternativeID.Checked = true;
                        divNID.Visible = false;
                        divtxtAlternativeID.Visible = true;
                        divddlAlternativeIDType.Visible = true;
                        txtAlternativeID.Text = Session["VistorAlternativeNID"].ToString();
                    }
                    if (Session["VistorAlternativeType"] != null && !string.IsNullOrEmpty(Session["VistorAlternativeType"].ToString()) && !Session["VistorAlternativeType"].ToString().Equals(""))
                    {
                        ddlAlternativeIDType.SelectedValue = Session["VistorAlternativeType"].ToString();
                    }
                    if (Session["VistorNID"] != null && !string.IsNullOrEmpty(Session["VistorNID"].ToString()) && !Session["VistorNID"].ToString().Equals(""))
                    {
                        ckAlternativeID.Checked = false;
                        divNID.Visible = true;
                        divtxtAlternativeID.Visible = false;
                        divddlAlternativeIDType.Visible = false;
                        txtIDNum.Text = Session["VistorNID"].ToString();
                    }

                    Session["VistorName"] = string.Empty;
                    Session["VistorAlternativeType"] = string.Empty;
                    Session["VistorAlternativeNID"] = string.Empty;
                    Session["VistorNID"] = string.Empty;

                }
            }
            catch (Exception ex)
            {
                Helper.LogError(ex);
                Response.Redirect("/Error.aspx");
            }
        }


        protected void btnSave_Click(object sender, EventArgs e)
        {
            int? result = null;
            try
            {
                result = insert();
            }
            catch (Exception ex)
            {
                Helper.LogError(ex);
                result = -2;
            }
            finally
            {
                if (result == 1)
                {

                    DivMsg.Visible = true;
                    DivMsg.Attributes.Add("class", "alert alert-success alert-dismissable");
                    pDivNotifiDesc.Text = "تم اضافة الزائر بنجاح";
                    Session["vistorAdd"] = "Success";
                    Response.Redirect("/visitors/CheckIn.aspx");

                }
                else if (result == -2)
                {
                    DivMsg.Visible = true;
                    DivMsg.Attributes.Add("class", "alert alert-danger  alert-dismissable");
                    pDivNotifiDesc.Text = "خطأ ! عذرا اتصل بمسؤول النظام";
                }
                else if (result == -3)
                {
                    DivMsg.Visible = true;
                    DivMsg.Attributes.Add("class", "alert alert-danger  alert-dismissable");
                    pDivNotifiDesc.Text = "خطأ ! عذرا اعد تحميل الصورة";
                }
                reset();
            }
        }

        protected void btnReset_Click(object sender, EventArgs e)
        {
            try
            {
                reset();
            }
            catch (Exception ex)
            {
                Helper.LogError(ex);
                Response.Redirect("/Error.aspx");
            }

        }

        private void reset()
        {

            txtAlternativeID.Text = string.Empty;
            txtAlternativeIDError.Text = string.Empty;
            txtIDNum.Text = string.Empty;
            txtMobile.Text = string.Empty;
            txtName.Text = string.Empty;
            ckAlternativeID.Checked = false;
            ddlAlternativeIDType.SelectedIndex = 1;
            hiddenContentField.Value = string.Empty;
            if (Request.Cookies["UserGender"] == null)
            {
                Response.Redirect("~/Login.aspx?page=" + Request.RawUrl, false);
            }
            bool userGender = bool.Parse(Request.Cookies["UserGender"].Value.ToString());
            if (!userGender)
            {
                rbFemale.Checked = true;
            }
            else
            {
                rbMale.Checked = true;
            }
            getAllCountries();
        }
        protected void ckAlternativeID_CheckedChanged(object sender, EventArgs e)
        {
            if (ckAlternativeID.Checked)
            {
                divNID.Visible = false;
                divtxtAlternativeID.Visible = true;
                divddlAlternativeIDType.Visible = true;
            }
            else
            {
                divNID.Visible = true;
                divtxtAlternativeID.Visible = false;
                divddlAlternativeIDType.Visible = false;
            }
        }

        private void getAllCountries()
        {
            try
            {
                var query = new VisitorsDataContext().GetAllCountries().ToList<GetAllCountriesResult>();


                ddlCountries.DataTextField = "CountryName";
                ddlCountries.DataValueField = "CountryID";
                ddlCountries.DataSource = query;
                ddlCountries.DataBind();

            }
            catch (Exception ex)
            {
                Helper.LogError(ex);
                Response.Redirect("/Error.aspx");
            }
        }
        private int? insert()
        {
            VisitorsDataContext objDateContext = new VisitorsDataContext();
            int? result = null;
            int? id = null;
            bool gender;
            if (rbMale.Checked)
            {
                gender = true;
            }
            else
            {
                gender = false;
            }
            if (ckAlternativeID.Checked)
            {
                if (txtAlternativeID.Text.Trim().Equals(string.Empty))
                {
                    txtAlternativeIDError.Visible = true;
                }
                else
                {
                    // in case with scanner image to check that image save on server correctly
                    if (hiddenContentField.Value != null && !string.IsNullOrEmpty(hiddenContentField.Value))
                    {
                        if (File.Exists(Server.MapPath(ConfigurationManager.AppSettings["image"]) + hiddenContentField.Value))
                        {
                            objDateContext.VistorsAdd(txtIDNum.Text.ToString(), txtName.Text.ToString(), gender, hiddenContentField.Value.ToString(), txtMobile.Text.ToString(), Request.Cookies["UserWebsiteId"].Value.ToString(), null, DateTime.Now, txtAlternativeID.Text, int.Parse(ddlAlternativeIDType.SelectedValue), int.Parse(ddlCountries.SelectedValue), ref result, ref id);

                            List<string> names = txtName.Text.ToString().Split(' ').ToList<string>();
                            foreach (var item in names)
                            {
                                try
                                {
                                    int? result2 = null;
                                    objDateContext.NamesAdd(item, ref result2);
                                }
                                catch
                                {

                                }
                            }
                        }
                        else
                        {
                            return -3;
                        }
                    }
                    else
                    {

                        objDateContext.VistorsAdd(txtIDNum.Text.ToString(), txtName.Text.ToString(), gender, hiddenContentField.Value.ToString(), txtMobile.Text.ToString(), Request.Cookies["UserWebsiteId"].Value.ToString(), null, DateTime.Now, txtAlternativeID.Text, int.Parse(ddlAlternativeIDType.SelectedValue), int.Parse(ddlCountries.SelectedValue), ref result, ref id);

                        List<string> names = txtName.Text.ToString().Split(' ').ToList<string>();
                        foreach (var item in names)
                        {
                            try
                            {
                                int? result2 = null;
                                objDateContext.NamesAdd(item, ref result2);
                            }
                            catch
                            {

                            }
                        }
                    }
                }
            }
            else
            {
                objDateContext.VistorsAdd(txtIDNum.Text.ToString(), txtName.Text.ToString(), gender, hiddenContentField.Value.ToString(), txtMobile.Text.ToString(), Request.Cookies["UserWebsiteId"].Value.ToString(), null, DateTime.Now, null, 0, int.Parse(ddlCountries.SelectedValue), ref result, ref id);
                List<string> names = txtName.Text.ToString().Split(' ').ToList<string>();
                foreach (var item in names)
                {
                    try
                    {
                        int? result2 = null;
                        objDateContext.NamesAdd(item, ref result2);
                    }
                    catch
                    {

                    }
                }
            }
            return result;
        }
    }
}